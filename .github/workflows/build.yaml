name: Build Globe Runtime Shared Library
on:
  
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64-gnu
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          # - os-name: Linux-aarch64-gnu
          #   runs-on: ubuntu-20.04
          #   target: aarch64-unknown-linux-gnu	

          # - os-name: Windows-x86_64
          #   runs-on: windows-latest
          #   target: x86_64-pc-windows-msvc

          # - os-name: macOS-x86_64
          #   runs-on: macOS-latest
          #   target: x86_64-apple-darwin
          
          # - os-name: macOS-aarch64
          #   runs-on: macOS-latest
          #   target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build Shared Library
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true

      - name: Find built shared library
        id: find_artifact
        run: |
          echo "Locating build artifact..."
          if [[ "${{ matrix.platform.target }}" == *"windows"* ]]; then
            EXT="dll"
          elif [[ "${{ matrix.platform.target }}" == *"apple"* ]]; then
            EXT="dylib"
          else
            EXT="so"
          fi

          ARTIFACT_GLOB="target/${{ matrix.platform.target }}/release/*.${EXT}"
          ARTIFACT_FILE=$(ls $ARTIFACT_GLOB 2>/dev/null || true)

          if [[ -z "$ARTIFACT_FILE" ]]; then
            echo "Error: No built library found at $ARTIFACT_GLOB"
            exit 1
          fi

          echo "artifact_path=$ARTIFACT_FILE" >> $GITHUB_OUTPUT
          echo "Found artifact: $ARTIFACT_FILE"

          # Prepare new filename
          BASENAME=$(basename "$ARTIFACT_FILE")
          NEW_NAME="${BASENAME%.*}-${{ matrix.platform.target }}.${EXT}"

          mv "$ARTIFACT_FILE" "$NEW_NAME"

          echo "artifact_path=$NEW_NAME" >> $GITHUB_OUTPUT
          echo "Renamed artifact: $NEW_NAME"


      - name: Publish artifacts and release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: ${{ steps.find_artifact.outputs.artifact_path }}

        